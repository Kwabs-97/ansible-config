- name: Install packages
  ansible.builtin.apt:
    update_cache: yes
    name:
      - libnss3-tools
      - ca-certificates
      - curl
    state: present
  become: yes


- name: Create the certificate directory
  ansible.builtin.file:
    path: "{{ cert_dir }}"
    state: directory
    owner: root
    group: root
    mode: '755'
  become: yes

- name: Get system architecture
  command: "dpkg --print-architecture"
  register: system_architecture
  changed_when: false

- name: Set architecture variable
  set_fact:
    mkcert_arch: "{{ system_architecture.stdout }}"
  when: system_architecture.stdout is defined


- name: Download mkcert binary
  get_url:
    url: "https://github.com/FiloSottile/mkcert/releases/download/{{ mkcert_version }}/mkcert-{{ mkcert_version }}-linux-{{ mkcert_arch }}"
    dest: /usr/local/bin/mkcert
    mode: '755'
    force: yes
  become: yes


- name: Verify mkcert installation
  command: "mkcert -version"
  register: mkcert_version_output
  changed_when: false
  failed_when: mkcert_version not in mkcert_version_output.stdout


- name: Initialize mkcert
  command: "mkcert -install"
  become: yes
  args:
    creates: "{{ ansible_env.HOME }}/.local/share/mkcert/rootCA.pem"
  environment: 
    CAROOT: "/home/ubuntu/.local/share/mkcert"


- name: Generate certificates
  command: "mkcert -cert-file {{ cert_dir }}/cert.pem -key-file {{ cert_dir }}/key.pem {{ domain }}"
  become: yes
  args:
    creates: "{{ cert_dir }}/cert.pem"


- name: Create renewal script
  become: yes
  copy:
    dest: "{{ renewal_script_path }}"
    content: |
      #!/bin/bash
      mkcert -cert-file {{ cert_dir }}/cert.pem -key-file {{ cert_dir }}/key.pem {{ domain }}
      systemctl reload nginx 2>/dev/null || true

    mode: '755'


- name: Create systemd renewal service
  become: yes
  copy:
    dest: "{{ renewal_service_path }}"
    content: |
      [Unit]
      Description=Renew local certificates
      After=network.target

      [Service]
      Type=oneshot
      ExecStart={{ renewal_script_path }}

      [Install]
      WantedBy=multi-user.target

    mode: '644'


- name: Create systemd renewal timer
  become: yes
  copy: 
    dest: "{{ renewal_timer_path }}"
    src: files/renew-local-certs.timer


- name: Start and enable the renewal timer
  systemd:
    name: renew-local-certs.timer
    state: started
    enabled: yes
  become: yes